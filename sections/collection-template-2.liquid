<style>
  #preview-bar-iframe {
    display: none;
  }
</style>

{{ 'isotope.min.js' | asset_url | script_tag }}
{{ 'ScrollTrigger.min.js' | asset_url | script_tag }}
 
<!-- Mood Filters -->

<div class="moodFilter z-10 flex pl-4 overflow-scroll scrolling-touch">

  {% for tag in collection.all_tags %}

    {%- comment -%} Create a button with each tag as a class on the product {%- endcomment -%}
  
    <div class="mr-2">
      <button class="filter{{ tag | capitalize}} bg-transparent text-white font-semibold hover:text-white py-2 px-4 border border-white hover:border-transparent rounded">{{ tag }}</button>
    </div>

    {%- comment -%} Get that button and on click invoke the isotope filter to only show items with that tag/class name {%- endcomment -%}
  
    <script>
      let filter{{ tag | capitalize}} = document.querySelector('.filter{{ tag | capitalize }}')
      filter{{ tag | capitalize}}.addEventListener('click', () => {
        iso.arrange({
          filter: '.{{ tag | lowercase }}'
        })
      })
    </script>
  
  {% endfor %}
  
</div>

<!-- Product Grid -->

<div class="flex justify-center mt-32">

  <div class="productGrid">
  
    {% for product in collection.products %}
  
      <!-- Product Item -->
  
      <a class="productGrid-item{% for tag in product.tags %} {{ tag }}{% endfor %}" href="{{ product.url }}">
  
        <div>
    
          <div>
            {{ product.images[0] | img_url: '700x' | img_tag }}
          </div>
    
          <div>
            {{- product.title -}}
          </div>
    
          <div class="hidden">
            {{- product.description -}}
          </div>
          
          <div>
            {{- product.price | money_without_trailing_zeros -}}
          </div>
    
        </div>
  
      </a>
  
    {% endfor %}
    
  </div> 
</div>

<script>

  let moodFilterMobileAnim = gsap.timeline({
    scrollTrigger: {
      trigger: '.productGrid',
      start: 'top top',
      endTrigger:'.site-footer',
      end:"bottom bottom",
      toggleActions: "play none none reverse",
      markers: true
    }
  })

  moodFilterMobileAnim
    .to('.moodFilter', {
      top: -150,
      position: 'fixed',
      duration: 0
    })
    .to('.moodFilter', {
      backgroundColor: '#EEF835',
      top: 24,
      duration: 1
    })
</script>

<script>

  let productGrid = document.querySelector('.productGrid');
  let productGridItem = document.querySelector('.productGrid-item');
  let iso = new Isotope( productGrid, {
    itemSelector: '.productGrid-item',
    percentPosition: true,
    layoutMode: 'masonry',
    masonry: {
      gutter: 8,
      columnWidth: productGridItem,
      fitWidth: true,
      resize: true      
    }
  });

</script>

