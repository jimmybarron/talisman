<style>
  #preview-bar-iframe {
    display: none;
  }

  body,
  html {
    background-color: #FFF7E8;
  }
</style>

{{ 'isotope.min.js' | asset_url | script_tag }}
{{ 'ScrollTrigger.min.js' | asset_url | script_tag }}

<div class="h-10"></div>

<h1 class="moodTitle text-6xl mt-16 mb-8 text-center">
  CRYSTALS FOR YOUR MOOD
</h1>

<!-- --------------------------------------------------------
MOOD FILTERS UI
-------------------------------------------------------- -->

<div class="moodFilterContain w-screen z-10">
  <div class="moodFilter w-screen flex py-2 overflow-x-scroll">
    
    {%- comment -%}
    --------------------------------------------------------
    MOOD BUTTONS
    --------------------------------------------------------
    {%- endcomment -%}
    
    {% for tag in collection.all_tags %}
  
      <div class="py-2 px-4">
  
        <button class="filter{{ tag | capitalize}} filterBtn bg-transparent" style="color: #5200FF;">
  
          <div class="crystal-icon-{{ tag | lowercase}} flex justify-center opacity-0">
  
            <svg width="20" height="26" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g clip-path="url(#clip0)" stroke="#5200FF" stroke-width="1.5">
                <path clip-rule="evenodd"
                  d="M3.142 5.024L.82 8.236v8.953l4.476 6.918 4.725.536 8.564-7.002.594-9.405-5.851-7.235H9.607L3.142 5.024z" />
                <path
                  d="M13.254 1.001l.559 4.023L19.16 8.25M13.831 5.045L8.978 8.042H5.916l-2.78-2.997M5.27 24.13l.632-1.536 3.046-.196 1.791 1.6M5.898 7.964V22.59M8.938 8.042v14.315" />
              </g>
              <defs>
                <clipPath id="clip0">
                  <path fill="#fff" d="M0 0h20v25.6H0z" />
                </clipPath>
              </defs>
            </svg>
  
          </div>
  
          {{ tag }}
  
        </button>
  
      </div>
  
  
      <script>
  
        {%- comment -%}
        --------------------------------------------------------
        CRYSTAL ANIMATIONS
        --------------------------------------------------------
        {%- endcomment -%}
  
        let crystalIcon{{ tag | capitalize }}AnimIn = gsap.timeline({
          paused: true,
          defaults: {
            ease: 'power3.out'
          }
        });
  
        let crystalIcon{{ tag | capitalize }}AnimOut = gsap.timeline({
          paused: true
        });
  
        crystalIcon{{ tag | capitalize }}AnimIn
          .set('.crystal-icon-{{ tag | lowercase}}', {
            opacity: 0,
            y: 30,
            rotation: -90
          })
          .to('.crystal-icon-{{ tag | lowercase}}', {
            duration: 0.5,
            opacity: 1,
            y: 0,
            rotation: 0
          });
  
  
        crystalIcon{{ tag | capitalize }}AnimOut
        .to('.crystal-icon-{{ tag | lowercase}}', {
          duration: 1,
          y: 30,
          opacity: 0,
          rotation: 180
        });
  
        {%- comment -%}
        --------------------------------------------------------
        MOOD CLICK ANIMATION TRIGGERS & ACTIONS
        --------------------------------------------------------
        Get that button and on click invoke the isotope filter to only show items with that tag class name
        {%- endcomment -%}
  
        let filter{{ tag | capitalize }} = document.querySelector('.filter{{ tag | capitalize }}');
  
        filter{{ tag | capitalize }}.addEventListener('click', () => {
  
          filter{{ tag | capitalize }}.focus();
          crystalIcon{{ tag | capitalize }}AnimIn.restart();
          crystalIcon{{ tag | capitalize }}AnimIn.play();
  
          iso.arrange({
            filter: '.{{ tag | lowercase }}',
            hiddenStyle: {
              opacity: 0,
              transform: 'scale(0.8)'
            },
            visibleStyle: {
              opacity: 1,
              transform: 'scale(1)'
            }
          })

          // --------------------------------------------------------
          // VIBE IMAGES
          // --------------------------------------------------------
  
          let numProductsInMood = document.querySelectorAll('.{{ tag }}').length - 3;
  
          console.log(numProductsInMood);
  
          if (numProductsInMood <= 4) {
            // document.querySelector('.vibe1').style.display = 'block';
            document.querySelector('.vibe2').style.display = 'none';
            document.querySelector('.vibe3').style.display = 'none';
            console.log('1 Vibe Image')
          } else if (numProductsInMood >= 5 && numProductsInMood <= 8 ) {
            // document.querySelector('.vibe1').style.display = 'block';
            // document.querySelector('.vibe2').style.display = 'block';
            document.querySelector('.vibe3').style.display = 'none';
            console.log('2 Vibe Images')
          } else {
            // document.querySelector('.vibe1').style.display = 'block';
            // document.querySelector('.vibe2').style.display = 'block';
            // document.querySelector('.vibe3').style.display = 'block';
            console.log('3 Vibe Images')
          }
          
          iso.layout();
  
        });
  
        {%- comment -%}
        --------------------------------------------------------
        MOOD UI OUT ANIMATIONS WHEN USER CLICKS NEXT MOOD
        --------------------------------------------------------
        Get that button and on click invoke the isotope filter to only show items with that tag class name
        {%- endcomment -%}
  
        filter{{ tag | capitalize }}.addEventListener('focusout', () => {
  
          crystalIcon{{ tag | capitalize }}AnimOut.restart();
  
        });
  
        filter{{ tag | capitalize }}.addEventListener('touchcancel', () => {
  
          crystalIcon{{ tag | capitalize }}AnimOut.restart();
  
        });
  
      </script>
  
    {% endfor %}
  
  </div>
</div>

<!-- --------------------------------------------------------
MOOD TITLE & DESCRIPTION
-------------------------------------------------------- -->

<div class="moodInfo my-12 px-2">
  <h1 class="moodTitle text-4xl text-center mb-4">
    {{ collection.title }}
  </h1>
  <div class="moodDescription text-center">
    {{ collection.description }}
  </div>
</div>

<!-- --------------------------------------------------------
PRODUCT GRID
-------------------------------------------------------- -->

<div class="flex justify-center">

  <div class="productGrid">

    <!-- Product Item 1-3-->

    {% for product in collection.products limit: 3 %}

    <a class="productGrid-item{% for tag in product.tags %} {{ tag }}{% endfor %}" href="{{ product.url }}">

      <div>
        {{ product.images[0] | img_url: '700x' | img_tag }}
      </div>

      <div class="productGrid-item__content flex flex-col justify-between">

        <div class="pl-2 pt-2">
          {{- product.title -}}
        </div>

        <div class="hidden">
          {{- product.description -}}
        </div>

        <div class="text-right pr-2" style="color: #EEF835;">
          {{- product.price | money_without_trailing_zeros -}}
        </div>

      </div>

    </a>

    {% endfor %}

    <!--Vibe Image 1 -->

    <div class="productGrid-item vibe1 {{ collection.all_tags | join: ' ' }}">
      {{ 'all-vibe-1.png' | file_img_url: 'master' | img_tag }}
    </div>

    <!-- Product Item 4 -->

    {% for product in collection.products limit: 1 offset: 3 %}

    <a class="productGrid-item{% for tag in product.tags %} {{ tag }}{% endfor %}" href="{{ product.url }}">

      <div>
        {{ product.images[0] | img_url: '700x' | img_tag }}
      </div>

      <div class="productGrid-item__content flex flex-col justify-between">

        <div class="pl-2 pt-2">
          {{- product.title -}}
        </div>

        <div class="hidden">
          {{- product.description -}}
        </div>

        <div class="text-right pr-2" style="color: #EEF835;">
          {{- product.price | money_without_trailing_zeros -}}
        </div>

      </div>

    </a>

    {% endfor %}

    <!-- Vibe Image 2 -->

    <div class="productGrid-item vibe2 {{ collection.all_tags | join: ' ' }}">
      {{ 'all-vibe-1.png' | file_img_url: 'master' | img_tag }}
    </div>

    <!-- Product Item 5-8 -->

    {% for product in collection.products limit: 4 offset: 4 %}

    <a class="productGrid-item{% for tag in product.tags %} {{ tag }}{% endfor %}" href="{{ product.url }}">

      <div>
        {{ product.images[0] | img_url: '700x' | img_tag }}
      </div>

      <div class="productGrid-item__content flex flex-col justify-between">

        <div class="pl-2 pt-2">
          {{- product.title -}}
        </div>

        <div class="hidden">
          {{- product.description -}}
        </div>

        <div class="text-right pr-2" style="color: #EEF835;">
          {{- product.price | money_without_trailing_zeros -}}
        </div>

      </div>

    </a>

    {% endfor %}

    <!-- Vibe Image 3 -->

    <div class="productGrid-item vibe3 {{ collection.all_tags | join: ' ' }}">
      {{ 'all-vibe-1.png' | file_img_url: 'master' | img_tag }}
    </div>

    <!-- Product Item 9-8 -->

    {% for product in collection.products offset: 8 %}

    <a class="productGrid-item{% for tag in product.tags %} {{ tag }}{% endfor %}" href="{{ product.url }}">

      <div>
        {{ product.images[0] | img_url: '700x' | img_tag }}
      </div>

      <div class="productGrid-item__content flex flex-col justify-between">

        <div class="pl-2 pt-2">
          {{- product.title -}}
        </div>

        <div class="hidden">
          {{- product.description -}}
        </div>

        <div class="text-right pr-2" style="color: #EEF835;">
          {{- product.price | money_without_trailing_zeros -}}
        </div>

      </div>

    </a>

    {% endfor %}

  </div>
</div>

{%- comment -%}
--------------------------------------------------------
STICKY MOOD FILTER UI & ANIMATION
--------------------------------------------------------
{%- endcomment -%}

<script>

  let moodFilterMobileAnim = gsap.timeline({
    scrollTrigger: {
      trigger: '.moodFilterContain',
      start: 'top top',
      endTrigger: '.site-footer',
      end: 'bottom bottom',
      toggleActions: "play none none reverse"
    }
  });

  moodFilterMobileAnim
    .set('.moodFilter', {
      position: 'fixed',
      top: 0,
      zIndex: '20'
    })
    .set('.moodInfo', {
      margin: '165px 0 48px 0'
    })
    .to('.moodFilter', {
      background: 'linear-gradient(180deg, #EEF835 80%, rgba(255, 255, 255, 0) 100%)',
      ease: "power3.out",
      duration: 0.1 });

</script>

{%- comment -%}
--------------------------------------------------------
ISOTOPE SETTINGS
--------------------------------------------------------
{%- endcomment -%}


<script>

  let productGrid = document.querySelector('.productGrid');
  let productGridItem = document.querySelector('.productGrid-item');
  let iso = new Isotope(productGrid, {
    itemSelector: '.productGrid-item',
    stamp: '.stamp',
    percentPosition: true,
    layoutMode: 'masonry',
    masonry: {
      gutter: 8,
      columnWidth: productGridItem,
      fitWidth: true,
      resize: true
    }
  });

  filterAll.click();

</script>